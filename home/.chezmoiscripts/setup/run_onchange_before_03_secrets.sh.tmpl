#!/usr/bin/env bash

{{- if .personal }}

ERROR="\e[31m"
SUCCESS="\e[32m"
WARNING="\e[33m"
RESET="\e[0m"
BOLD="\e[1m"

keyPath="{{ .chezmoi.config.age.identity }}"

sudo -v

check_install() {
  local cmd="$1"
  local pkg="$2"
  
  if ! command -v "$cmd" &>/dev/null; then
    echo -e "installing $pkg"
    sudo pacman -S --needed --noconfirm "$pkg"
  fi

}

{{- if not (stat .chezmoi.config.age.identity) }}

set_ssh() {
  mkdir -p "$(dirname "$keyPath")"
  chmod 700 "$(dirname "$keyPath")"

  echo -e "${BOLD}getting ssh key${RESET}"
  local privateKey publicKey

  privateKey="{{ (bitwarden "item" "main-ssh").sshKey.privateKey }}"
  publicKey="{{ (bitwarden "item" "main-ssh").sshKey.publicKey }}"

  printf '%b' "$privateKey" > "$keyPath" && chmod 600 "$keyPath"
  printf '%b' "$publicKey" > "${keyPath}.pub" && chmod 644 "${keyPath}.pub"

}

{{- else }}

set_ssh() {
  mkdir -p "$(dirname "$keyPath")"
  chmod 700 "$(dirname "$keyPath")"

  echo -e "${SUCCESS}ssh key already exists${RESET}"
}

{{- end }}

set_gpg() {
  if ! gpg --list-secret-keys --with-colons | grep -q '^sec:'; then
    echo -e "generating gpg key"
    gpg --full-generate-key
  else
    echo -e "${SUCCESS}gpg key already exists${RESET}"
  fi
}

check_install gpg gnupg
check_install ssh openssh

set_gpg
set_ssh

{{ end -}}
